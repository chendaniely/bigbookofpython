[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Big Book of Python",
    "section": "",
    "text": "Preface\nThis project is heavily inspired by the Big Book of R. Here you will find a collection of (mostly free) Python learning resources.\nThis is a book created from markdown and executable code using Quarto. See Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "install.html#hitchhikers-guide-to-properly-installing-python",
    "href": "install.html#hitchhikers-guide-to-properly-installing-python",
    "title": "1  Installing Python",
    "section": "1.1 Hitchhiker’s Guide to Properly Installing Python",
    "text": "1.1 Hitchhiker’s Guide to Properly Installing Python\nKenneth Reitz & Real Python\nThere’s a good chance that you already have Python on your operating system.\nIf so, you do not need to install or configure anything else to use Python. Having said that, I would strongly recommend that you install the tools and libraries described in the guides below before you start building Python applications for real-world use. In particular, you should always install Setuptools, Pip, and Virtualenv — they make it much easier for you to use other third-party Python libraries.\nhttps://docs.python-guide.org/starting/installation/"
  },
  {
    "objectID": "install.html#rstudio-minimum-viable-python",
    "href": "install.html#rstudio-minimum-viable-python",
    "title": "1  Installing Python",
    "section": "1.2 RStudio Minimum Viable Python",
    "text": "1.2 RStudio Minimum Viable Python\nRStudio Solutions Engineering\nYour workflow should also anticipate some of the following challenges:\n\nYou are going to work on multiple projects with varying lifespans and potentially conflicting dependencies.\nThe language, some of the Python packages you use, or the packages those packages depend on are going to change while you work.\n\nHowever, you are responsibile for when changes in the language or your dependencies make their way into your projects. Keeping track of which version of Python you’re using is an important first step that will make it easier to share your projects with other people, switch between projects, and debug problems with your code.\nhttps://solutions.rstudio.com/python/minimum-viable-python/installing-python/"
  },
  {
    "objectID": "packaging.html#python-packages",
    "href": "packaging.html#python-packages",
    "title": "2  Packaging",
    "section": "2.1 Python Packages",
    "text": "2.1 Python Packages\nTomas Beuzen & Tiffany Timbers\nPython packages are a core element of the Python programming language and are how you create organized, reusable, and shareable code in Python. Python Packages is an open source book that describes modern and efficient workflows for creating Python packages.\nhttps://py-pkgs.org/"
  },
  {
    "objectID": "data_science.html#elements-of-data-science",
    "href": "data_science.html#elements-of-data-science",
    "title": "3  Data Science",
    "section": "3.1 Elements of Data Science",
    "text": "3.1 Elements of Data Science\nAllen Downey\nAn introduction to data science designed for people with no programming experience, this book presents a small, powerful subset of Python that allows you to do real work in data science as quickly as possible. It includes Jupyter notebooks where you can read the text, run the code, and work on exercises to practice what you learn.\nhttps://allendowney.github.io/ElementsOfDataScience/README.html"
  },
  {
    "objectID": "data_science.html#geog-30323-data-analysis-visualization",
    "href": "data_science.html#geog-30323-data-analysis-visualization",
    "title": "3  Data Science",
    "section": "3.2 GEOG 30323: Data Analysis & Visualization",
    "text": "3.2 GEOG 30323: Data Analysis & Visualization\nDr. Kyle Walker at Texas Christian University\nThis is a course in exploratory data analysis with an emphasis on the Python programming language and PyData ecosystem. The course targets students from all disciplines with an interest in data analytics, but does not assume any prior experience with computer programming.\nCourse assignments can be viewed from the sidebar menu. To “launch” a assignment in Binder or Google Colab, click the rocket icon in the top left of the screen and choose your platform.\nhttps://walker-data.com/geog30323/"
  },
  {
    "objectID": "data_science.html#python-data-science-handbook",
    "href": "data_science.html#python-data-science-handbook",
    "title": "3  Data Science",
    "section": "3.3 Python Data Science Handbook",
    "text": "3.3 Python Data Science Handbook\nJake VanderPlas\nThe Python Data Science Handbook by Jake VanderPlas (O’Reilly Media, 2016). This is a comprehensive introduction to the most important data science tools in the Python world. Several examples used in the book are drawn from posts on this blog. The full text can be read online, and the content is also available as Jupyter notebooks on GitHub.\nhttps://jakevdp.github.io/PythonDataScienceHandbook/"
  },
  {
    "objectID": "data_science.html#think-bayes-2e-bayesian-statistics-in-python",
    "href": "data_science.html#think-bayes-2e-bayesian-statistics-in-python",
    "title": "3  Data Science",
    "section": "3.4 Think Bayes 2e: Bayesian Statistics in Python",
    "text": "3.4 Think Bayes 2e: Bayesian Statistics in Python\nAllen Downey\nAn introduction to Bayesian statistics using simple Python programs instead of complicated math.\nhttps://allendowney.github.io/ThinkBayes2/"
  },
  {
    "objectID": "data_science.html#think-stats-2e-exploratory-data-analysis",
    "href": "data_science.html#think-stats-2e-exploratory-data-analysis",
    "title": "3  Data Science",
    "section": "3.5 Think Stats, 2e: Exploratory Data Analysis",
    "text": "3.5 Think Stats, 2e: Exploratory Data Analysis\nAllen Downey\nAn introduction to exploratory data analysis. Like the first edition, this book emphasizes simple computational tools for exploring real data. It includes several new topics, including regression, time series analysis, and survival analysis. It presents basic use of NumPy, SciPy, Pandas, and StatsModels.\nhttps://allendowney.github.io/ThinkBayes2/"
  },
  {
    "objectID": "domain_specific.html#astronomical-data-in-python",
    "href": "domain_specific.html#astronomical-data-in-python",
    "title": "4  Domain Specific",
    "section": "4.1 Astronomical Data in Python",
    "text": "4.1 Astronomical Data in Python\nAllen Downey\nAn introduction to tools and practices for working with astronomical data. Topics covered include SQL queries with complex joins, Astropy and Pandas, coordinates and other quantities with units, and visualizing data. This book includes Jupyter notebooks where you can read the text, run the code, and work on exercises to practice what you learn.\nhttps://allendowney.github.io/AstronomicalData/README.html"
  },
  {
    "objectID": "domain_specific.html#data-science-for-the-biomedical-sciences",
    "href": "domain_specific.html#data-science-for-the-biomedical-sciences",
    "title": "4  Domain Specific",
    "section": "4.2 Data Science for the Biomedical Sciences",
    "text": "4.2 Data Science for the Biomedical Sciences\nDaniel Chen, Anne Brown\nWe hope this book provides a gentle introduction to data science. The main goal is to understand how to work with spreadsheet data and how data can be manipulated for multiple purposes. If nothing else, the book hopes to help you plan how to structure your own datasets for your own analysis. Even if you never go on to program on your own, understanding the way data can be manipulated and having a plan for your own dataset in the processing pipeline, will go a long ways when leaning and doing the analysis on your own, and/or working with collegues and collaborators on a project.\nhttps://ds4biomed.tech/"
  },
  {
    "objectID": "domain_specific.html#modeling-and-simulation-in-python",
    "href": "domain_specific.html#modeling-and-simulation-in-python",
    "title": "4  Domain Specific",
    "section": "4.3 Modeling and Simulation in Python",
    "text": "4.3 Modeling and Simulation in Python\nAllen Downey\nModels of discrete systems, like population growth, first-order systems, like epidemics and thermal systems, and second-order systems, like mechanics. Designed for people who have not programmed before. This book includes Jupyter notebooks where you can read the text, run the code, and work on exercises to practice what you learned.\nhttps://allendowney.github.io/ModSimPy/"
  },
  {
    "objectID": "domain_specific.html#think-complexity-2e-exploring-complexity-science-with-python",
    "href": "domain_specific.html#think-complexity-2e-exploring-complexity-science-with-python",
    "title": "4  Domain Specific",
    "section": "4.4 Think Complexity 2e: Exploring Complexity Science with Python",
    "text": "4.4 Think Complexity 2e: Exploring Complexity Science with Python\nAllen Downey\nAn introduction to complexity science, which includes small-world graphs, scale-free networks, cellular automata, fractals and pink noise, self-organized criticality, and agent-based models.\nhttps://greenteapress.com/complexity2/html/index.html"
  },
  {
    "objectID": "domain_specific.html#think-dsp-digital-signal-processing-in-python",
    "href": "domain_specific.html#think-dsp-digital-signal-processing-in-python",
    "title": "4  Domain Specific",
    "section": "4.5 Think DSP: Digital Signal Processing in Python",
    "text": "4.5 Think DSP: Digital Signal Processing in Python\nAllen Downey\nAn introduction to digital signal processing with applications to sound and image processing.\nhttps://greenteapress.com/thinkdsp/html/index.html"
  },
  {
    "objectID": "programming.html#data-structures-and-information-retrieval-in-python",
    "href": "programming.html#data-structures-and-information-retrieval-in-python",
    "title": "5  Programming",
    "section": "5.1 Data Structures and Information Retrieval in Python",
    "text": "5.1 Data Structures and Information Retrieval in Python\nAllen Downey\nData Structures and Information Retrieval in Python, is an introduction to data structures organized around a motivating example: building a search engine.\nhttps://allendowney.github.io/DSIRP/"
  },
  {
    "objectID": "programming.html#geeksforgeeks",
    "href": "programming.html#geeksforgeeks",
    "title": "5  Programming",
    "section": "5.2 GeeksforGeeks",
    "text": "5.2 GeeksforGeeks\nThis specially designed Python tutorial will help you learn Python Programming Language in most efficient way, with the topics from basics to advanced (like Web-scraping, Django, Deep-Learning, etc.) with examples.\nhttps://www.geeksforgeeks.org/python-programming-language/"
  },
  {
    "objectID": "programming.html#python-for-everybody",
    "href": "programming.html#python-for-everybody",
    "title": "5  Programming",
    "section": "5.3 Python for Everybody",
    "text": "5.3 Python for Everybody\nCharles Severance (Dr. Chuck)\nThis web site is building a set of free materials, lectures, book and assignments to help students learn how to program in Python. The goal of this book is to provide an Informatics-oriented introduction to programming. The primary difference between a computer science approach and the Informatics approach taken in this book is a greater focus on using Python to solve data analysis problems common in the world of Informatics.\nhttps://www.py4e.com/"
  },
  {
    "objectID": "programming.html#python-notes-for-professionals",
    "href": "programming.html#python-notes-for-professionals",
    "title": "5  Programming",
    "section": "5.4 Python Notes for Professionals",
    "text": "5.4 Python Notes for Professionals\nhttps://goalkicker.com/PythonBook/\ngoalkicker\nThe Python® Notes for Professionals book is compiled from Stack Overflow Documentation, the content is written by the beautiful people at Stack Overflow. Text content is released under Creative Commons BY-SA. See credits at the end of this book whom contributed to the various chapters. Images may be copyright of their respective owners unless otherwise specified\nBook created for educational purposes and is not affiliated with Python® group(s), company(s) nor Stack Overflow. All trademarks belong to their respective company owners\n816 pages, published on June 2018"
  },
  {
    "objectID": "programming.html#the-python-tutorial",
    "href": "programming.html#the-python-tutorial",
    "title": "5  Programming",
    "section": "5.5 The Python Tutorial",
    "text": "5.5 The Python Tutorial\nPython Software Foundation\nThis tutorial does not attempt to be comprehensive and cover every single feature, or even every commonly used feature. Instead, it introduces many of Python’s most noteworthy features, and will give you a good idea of the language’s flavor and style. After reading it, you will be able to read and write Python modules and programs, and you will be ready to learn more about the various Python library modules described in The Python Standard Library.\nhttps://docs.python.org/3/tutorial/"
  },
  {
    "objectID": "programming.html#think-python-how-to-think-like-a-computer-scientist",
    "href": "programming.html#think-python-how-to-think-like-a-computer-scientist",
    "title": "5  Programming",
    "section": "5.6 Think Python: How to Think Like a Computer Scientist",
    "text": "5.6 Think Python: How to Think Like a Computer Scientist\nAllen Downey\nThink Python is an introduction to Python programming for beginners. It starts with basic concepts of programming, and is carefully designed to define all terms when they are first used and to develop each new concept in a logical progression. Larger pieces, like recursion and object-oriented programming are divided into a sequence of smaller steps and introduced over the course of several chapters.\nhttps://greenteapress.com/thinkpython2/html/index.html"
  },
  {
    "objectID": "programming.html#w3schools-python",
    "href": "programming.html#w3schools-python",
    "title": "5  Programming",
    "section": "5.7 W3Schools Python",
    "text": "5.7 W3Schools Python\nPython is a popular programming language. It was created by Guido van Rossum, and released in 1991.\nIt is used for:\n\nweb development (server-side),\nsoftware development,\nmathematics,\nsystem scripting.\n\nhttps://www.w3schools.com/python/default.asp"
  },
  {
    "objectID": "web.html#django-for-everybody",
    "href": "web.html#django-for-everybody",
    "title": "6  Web",
    "section": "6.1 Django for Everybody",
    "text": "6.1 Django for Everybody\nThis web site is building a set of free materials, lectures, and assignments to help students learn the Django web development framework\nhttps://www.dj4e.com"
  },
  {
    "objectID": "web.html#python-everywhere",
    "href": "web.html#python-everywhere",
    "title": "6  Web",
    "section": "6.2 Python Everywhere",
    "text": "6.2 Python Everywhere\nHost, run, and code Python in the cloud!\nGet started for free. Our basic plan gives you access to machines with a full Python environment already installed. You can develop and host your website or any other code directly from your browser without having to install software or manage your own server.\nNeed more power? Upgraded plans start at $5/month.\nhttps://www.pythonanywhere.com"
  },
  {
    "objectID": "podcasts.html#pybites-podcast",
    "href": "podcasts.html#pybites-podcast",
    "title": "7  Podcasts",
    "section": "7.1 PyBites Podcast",
    "text": "7.1 PyBites Podcast\nJulian Sequeira & Bob Belderbos\nThe PyBites Podcast is a podcast about Python Development, Career and Mindset skills. Hosted by the Co-Founders of PyBites, Bob Belderbos and Julian Sequeira, this podcast is for anyone interested in Python and looking for tips, tricks and concepts related to Career and Mindset. For more information on PyBites and Python, visit us at https://pybit.es and hit us up on social media!\nhttps://www.pybitespodcast.com/"
  },
  {
    "objectID": "podcasts.html#python-bytes",
    "href": "podcasts.html#python-bytes",
    "title": "7  Podcasts",
    "section": "7.2 Python Bytes",
    "text": "7.2 Python Bytes\nMichael Kennedy & Brian Okken\nPython Bytes is a weekly podcast hosted by Michael Kennedy and Brian Okken. Python Bytes podcast delivers headlines directly to your earbuds. If you want to stay up on the Python developer news but don’t have time to scour reddit, twitter, and other news sources, just subscribe and you’ll get the best picks delivered weekly.\nhttps://pythonbytes.fm/"
  },
  {
    "objectID": "podcasts.html#test-code-in-python",
    "href": "podcasts.html#test-code-in-python",
    "title": "7  Podcasts",
    "section": "7.3 Test & Code in Python",
    "text": "7.3 Test & Code in Python\nBrian Okken\nTopics include automated testing, testing strategy, software engineering practices, packaging, Python, pytest, data science, TDD, continuous integration, and software methodologies. Also anything I think helps make the daily life of a software developer more fun and rewarding."
  },
  {
    "objectID": "podcasts.html#talk-python-to-me",
    "href": "podcasts.html#talk-python-to-me",
    "title": "7  Podcasts",
    "section": "7.4 Talk Python to Me",
    "text": "7.4 Talk Python to Me\nMichael Kennedy\nA podcast on Python and related technologies\nhttps://talkpython.fm/"
  },
  {
    "objectID": "podcasts.html#teaching-python",
    "href": "podcasts.html#teaching-python",
    "title": "7  Podcasts",
    "section": "7.5 Teaching Python",
    "text": "7.5 Teaching Python\nKelly Paredes & Sean Tibor\nA podcast by Kelly Paredes and Sean Tibor about their adventures teaching middle school computer science, problem-solving, handling failure, frustration, and victory through the lens of the Python programming language.\nKelly Paredes has taught all over the world and specializes in curriculum design and development. She currently teaches sixth and seventh-grade computer science at Pine Crest School in Fort Lauderdale, Florida. This is her fourth year using Python.\nSean Tibor has worked in marketing and technical management roles selling toothpaste and toothbrushes, designing chemical inventory and tv media databases, enrolling online nursing students, and founding a digital marketing agency. This is his fourth year teaching Python to seventh and eighth-grade students at Pine Crest School in Fort Lauderdale, Florida.\nhttps://www.teachingpython.fm/"
  },
  {
    "objectID": "podcasts.html#the-real-python-podcast",
    "href": "podcasts.html#the-real-python-podcast",
    "title": "7  Podcasts",
    "section": "7.6 The Real Python Podcast",
    "text": "7.6 The Real Python Podcast\nChristopher Bailey\nA weekly Python podcast hosted by Christopher Bailey with interviews, coding tips, and conversation with guests from the Python community.\nThe show covers a wide range of topics including Python programming best practices, career tips, and related software development topics.\nJoin us every Friday morning to hear what’s new in the world of Python programming and become a more effective Pythonista.\nhttps://realpython.com/podcasts/rpp/"
  },
  {
    "objectID": "paid.html#pybites",
    "href": "paid.html#pybites",
    "title": "8  Paid Resources",
    "section": "8.1 PyBites",
    "text": "8.1 PyBites\nhttps://pybit.es/"
  },
  {
    "objectID": "paid.html#python-morsels",
    "href": "paid.html#python-morsels",
    "title": "8  Paid Resources",
    "section": "8.2 Python Morsels",
    "text": "8.2 Python Morsels\n(Trey Hunner)[https://treyhunner.com/]\nPython Morsels will help you maintain a Python learning habit. With weekly mini screencasts you’ll re-discover Python topics you thought you already knew.\nEach screencast also includes a short article explaining the same material through text, so you can switch between reading articles and watching videos as you see fit.\nWhy pay for this when there’s a lot of great free Python videos on YouTube? There’s really one reason: you’re trading money for time.\nI guarantee Python Morsels will include:\n\nNo ads: you’re not the product, the screencasts are\nNo filler content: no ad revenue means no need for long videos\nMy own expertise: I’ll teach you what I know (but not what I don’t)\nLite: USD$100/year\nAll Access: USD $200/year\n\nhttps://www.pythonmorsels.com/"
  },
  {
    "objectID": "paid.html#real-python-python-tutorials",
    "href": "paid.html#real-python-python-tutorials",
    "title": "8  Paid Resources",
    "section": "8.3 Real Python: Python Tutorials",
    "text": "8.3 Real Python: Python Tutorials\nReal Python\nLearn Python online: Python tutorials for developers of all skill levels, Python books and courses, Python news, code examples, articles, and more.\n\nUS$19.99 / Month\nUS$16.67 / Month\n\nUS$199.99 billed yearly\n\n\nhttps://realpython.com/"
  },
  {
    "objectID": "paid.html#talk-python-training",
    "href": "paid.html#talk-python-training",
    "title": "8  Paid Resources",
    "section": "8.4 Talk Python Training",
    "text": "8.4 Talk Python Training\nMichael Kennedy\nLearn online. Learn on-demand through high quality training videos. Our videos and additional resources are available 24/7 so you can learn what you need exactly when you need it.\nLifetime access. With our pay once, own it forever business model, you can rest assured that the courses you put time into become permanent resources for your career.\n\nCost Varied\nEverything Bundle\n\n221 total hours, $199 USD (own them all forever)\n\n\nhttps://training.talkpython.fm/courses/all"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]